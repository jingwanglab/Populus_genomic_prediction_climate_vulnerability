########### IBD,IBE,pIBD and pIBE for neutral loci ############
.libPaths("F:/360MoveData/Users/dell/Documents/R")
rm(list=ls())
library(vegan)
library(geosphere)
setwd("F:/360MoveData/Users/Desktop/NC/IBE&IBD")
env=read.csv("NOW24.csv",head=T)
fst=read.csv("F:/360MoveData/Users/Desktop/NC/IBE&IBD/structure/Fst_structure.csv",head=T)
fst=fst[,-1]
### env distance

ENV=as.data.frame(env[,c(4:22)])
ENV<- scale(ENV, center=TRUE, scale=TRUE)
rownames(ENV)=env$POP
env_dist=vegdist(ENV,method="euclidean",binary=FALSE, diag=FALSE, upper=FALSE,na.rm = FALSE)
write.csv(as.matrix(env_dist),file="scale.csv",quote=F)

#### geographical distance
dist=as.data.frame(env[,c(2:3)])
rownames(dist)=env$POP
muer.dists = distm(dist, fun=distVincentyEllipsoid)
rownames(muer.dists) =env$POP
colnames(muer.dists) =env$POP
write.csv(as.matrix(muer.dists),file="geo_dist.csv",quote=F)

#### geo-env dist pearson
env_dist=as.matrix(env_dist)
mantel(muer.dists,env_dist,method="pearson",permutations=999)

mantel(muer.dists[c(1:17),c(1:17)],env_dist[c(1:17),c(1:17)],method="pearson",permutations=999)

mantel(muer.dists[c(18:24),c(18:24)],env_dist[c(18:24),c(18:24)],method="pearson",permutations=999)


##### IBD
mantel(fst,muer.dists,method="pearson",permutations=999)

mantel(fst[c(1:17),c(1:17)],muer.dists[c(1:17),c(1:17)],method="pearson",permutations=999)

mantel(fst[c(18:24),c(18:24)],muer.dists[c(18:24),c(18:24)],method="pearson",permutations=999)


##### IBE
fst=read.csv("F:/360MoveData/Users/Desktop/fst1-fst/fst_all.csv",head=T,row.names=1)
mantel(fst,env_dist,method="pearson",permutations=999)

mantel(fst[c(1:17),c(1:17)],env_dist[c(1:17),c(1:17)],method="pearson",permutations=999)

mantel(fst[c(18:24),c(18:24)],env_dist[c(18:24),c(18:24)],method="pearson",permutations=999)

##### IBE partial

mantel.partial(fst,env_dist,muer.dists,method="pearson",permutations=999)

mantel.partial(fst[c(1:17),c(1:17)],env_dist[c(1:17),c(1:17)],muer.dists[c(1:17),c(1:17)],method="pearson",permutations=999)

mantel.partial(fst[c(18:24),c(18:24)],env_dist[c(18:24),c(18:24)],muer.dists[c(18:24),c(18:24)],method="pearson",permutations=999)

##### IBD partial

mantel.partial(fst,muer.dists,env_dist,method="pearson",permutations=999)

mantel.partial(fst[c(1:17),c(1:17)],muer.dists[c(1:17),c(1:17)],env_dist[c(1:17),c(1:17)],method="pearson",permutations=999)

mantel.partial(fst[c(18:24),c(18:24)],muer.dists[c(18:24),c(18:24)],env_dist[c(18:24),c(18:24)],method="pearson",permutations=999)

###############  plot ######################

.libPaths("F:/360MoveData/Users/dell/Documents/R")
rm(list=ls())
library(ggplot2)
library(cowplot)
setwd("F:/360MoveData/Users/Desktop/NC/IBE&IBD/1779")
geo_dit=read.csv("geo_dist.csv",head=F)
env_dist=read.csv("env_dist.csv",head=F)
fst1779=read.csv("1779fst_all.csv",head=F)
fst53w=read.csv("F:/360MoveData/Users/Desktop/NC/IBE&IBD/structure/Fst_structure.csv",head=F)
trans <- function(raw_data){
  raw_data=raw_data[-1,-1]
  out_data=data.frame(raw_data[,1])
  colnames(out_data)="value"
  for (i in 2:24){
    temp=data.frame(raw_data[i:24,i])
    colnames(temp)="value"
    out_data=rbind(out_data,temp)
  }
  out_data=na.omit(out_data)
  return(out_data)
}

plot_data=as.data.frame(matrix(nrow=300,ncol=0))
plot_data$geo_dit=trans(geo_dit)$value
plot_data$env_dist=trans(env_dist)$value
plot_data$fst1779=trans(fst1779)$value
plot_data$fst53w=trans(fst53w)$value
colnames(plot_data)=c("geo_dit","env_dist","fst1779","fst53w")
write.csv(plot_data,file="plot_data.csv",quote=F,row.names = F)

plot_data=read.csv("plot_data.csv",head=T)
p1=ggplot(plot_data)+
  geom_point(aes(x=geo_dit,y=fst1779),size = 3,alpha=0.7,color="black",shape=21,fill="#708090")+
  geom_point(aes(x=geo_dit,y=fst53w),size = 3,alpha=0.7,color="black",shape=21,fill="#CCCCCC")+
  geom_smooth(aes(x=geo_dit, y=fst53w),alpha=0.7,formula = y ~ x, method = lm,se=T,level=0.95,color="#9c9c9c", fill="#d6d6d6",size = 1.5,fullrange = F) +
  geom_smooth(aes(x=geo_dit, y=fst1779),alpha=0.7,formula = y ~ x, method = lm,se=T,level=0.95,color="#708090",fill="#b8c0c8",fullrange = F, size = 1.5) +
  labs(x = "Geographical Distance (100km)",y = expression(italic(F)[italic(ST)]/(1-italic(F)[italic(ST)])),size = 5.5)+
  panel_border(color = "black", size = 0.6, linetype = 1, remove = FALSE)+
  theme_bw()+
  theme(text=element_text(family="sans"),
        axis.ticks.length = unit(0.25,"lines"),axis.ticks=element_line(colour="black",unit(0.6,"line")),
        axis.text.x=element_text(size=12,colour = "black"),
        axis.text.y=element_text(size=12,colour = "black"), 
        plot.title = element_text(
          size = 15L,
          hjust = 0
        ),
        axis.title.y = element_text(size = 15),
        axis.title.x = element_text(size = 15),
        panel.background=element_rect(fill="white"),
        plot.background = element_rect(fill = "white"),
        #axis.line.x=element_line(colour="black"),
        #axis.line.y=element_line(colour="black"),
        #panel.border=element_blank(),
        panel.grid.major =element_blank(), panel.grid.minor = element_blank(),
        plot.margin=unit(c(0.1,0.1,0.1,0.1),"mm"))

p2=ggplot(plot_data)+
  geom_point(aes(x=env_dist,y=fst1779),size = 3,alpha=0.7,color="black",shape=21,fill="#708090")+
  geom_point(aes(x=env_dist,y=fst53w),size = 3,alpha=0.7,color="black",shape=21,fill="#CCCCCC")+
  geom_smooth(aes(x=env_dist, y=fst53w),alpha=0.7,formula = y ~ x, method = lm,se=T,level=0.95,color="#9c9c9c", fill="#d6d6d6",size = 1.5,fullrange = F) +
  geom_smooth(aes(x=env_dist, y=fst1779),alpha=0.7,formula = y ~ x, method = lm,se=T,level=0.95,color="#708090",fill="#b8c0c8",fullrange = F, size = 1.5) +
  labs(x = "Environment Distance",y = expression(italic(F)[italic(ST)]/(1-italic(F)[italic(ST)])),size = 5.5)+
  panel_border(color = "black", size = 0.6, linetype = 1, remove = FALSE)+
  theme_bw()+
  theme(text=element_text(family="sans"),
        axis.ticks.length = unit(0.25,"lines"),axis.ticks=element_line(colour="black",unit(0.6,"line")),
        axis.text.x=element_text(size=12,colour = "black"),
        axis.text.y=element_text(size=12,colour = "black"), 
        plot.title = element_text(
          size = 15L,
          hjust = 0
        ),
        axis.title.y = element_text(size = 15),
        axis.title.x = element_text(size = 15),
        panel.background=element_rect(fill="white"),
        plot.background = element_rect(fill = "white"),
        #axis.line.x=element_line(colour="black"),
        #axis.line.y=element_line(colour="black"),
        #panel.border=element_blank(),
        panel.grid.major =element_blank(), panel.grid.minor = element_blank(),
        plot.margin=unit(c(0.1,0.1,0.1,0.1),"mm"))
all=plot_grid(p1,p2,align ="v",labels=c("c","d"),label_size = 20,label_fontfamily = "sans",label_fontface = 1,ncol=1)
ggsave(all,file="P32.pdf",width=5.5,height=8)